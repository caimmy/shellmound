//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "daily_data")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub ts_code: String,
    pub trade_date: Option<String>,
    #[sea_orm(column_type = "Float", nullable)]
    pub open: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub high: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub low: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub close: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub pre_close: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub change: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub pct_chg: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub vol: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub amount: Option<f32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
